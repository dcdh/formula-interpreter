---
openapi: 3.0.3
info:
  title: infrastructure API
  version: 1.0-SNAPSHOT
servers:
- url: http://localhost:8080
  description: Auto generated value
- url: http://0.0.0.0:8080
  description: Auto generated value
paths:
  /evaluate:
    post:
      tags:
      - Evaluate Endpoint
      operationId: evaluate
      requestBody:
        content:
          application/vnd.formula-evaluate-v1+json:
            schema:
              $ref: "#/components/schemas/Evaluate"
            examples:
              Incomplete formula:
                description: Should fail to evaluate
                value:
                  formula: IF
                  structuredReferences:
                    Sales Amount: "260"
                    '% Commission': "10"
                  evaluateOn: ANTLR
                  debugFeature: ACTIVE
              Compute commission amount by multiplying Sales Amount by Percent Commission:
                description: Compute commission amount by multiplying Sales Amount
                  by Percent Commission
                value:
                  formula: "MUL([@[Sales Amount]],DIV([@[% Commission]],100))"
                  structuredReferences:
                    Sales Amount: "260"
                    '% Commission': "10"
                  evaluateOn: ANTLR
                  debugFeature: ACTIVE
              Compute commission amount by multiplying Sales Amount by Percent Commission if it is Joe multiply by two:
                description: Compute commission amount by multiplying Sales Amount
                  by Percent Commission if it is Joe multiply by two
                value:
                  formula: "IF(EQ([@[Sales Person]],\"Joe\"),MUL(MUL([@[Sales Amount]],DIV([@[%\
                    \ Commission]],100)),2),MUL([@[Sales Amount]],DIV([@[% Commission]],100)))"
                  structuredReferences:
                    Sales Amount: "260"
                    '% Commission': "10"
                  evaluateOn: ANTLR
                  debugFeature: ACTIVE
              Fail on unknown Structured Reference:
                description: "Should return #REF! on unknown Structured Reference"
                value:
                  formula: "IF(EQ([@[Sales Person]],\"Joe\"),MUL(MUL([@[Sales Amount\
                    \ BOOM]],DIV([@[% Commission]],100)),2),MUL([@[Sales Amount]],DIV([@[%\
                    \ Commission]],100)))"
                  structuredReferences:
                    Sales Person: Joe
                    Sales Amount: "260"
                    '% Commission': "10"
                  evaluateOn: ANTLR
                  debugFeature: ACTIVE
              Fail when dividing by zero:
                description: "Should return #DIV/0! when dividing by zero"
                value:
                  formula: "IF(EQ([@[Sales Person]],\"Joe\"),MUL(MUL([@[Sales Amount]],DIV([@[%\
                    \ Commission]],0)),2),MUL([@[Sales Amount]],DIV([@[% Commission]],100)))"
                  structuredReferences:
                    Sales Person: Joe
                    Sales Amount: "260"
                    '% Commission': "10"
                  evaluateOn: ANTLR
                  debugFeature: ACTIVE
              Fail when doing an operation on not a number:
                description: "Should return #NUM! when doing an operation on not a\
                  \ number"
                value:
                  formula: "MUL([@[Sales Amount]],\"not a number\")"
                  structuredReferences:
                    Sales Amount: "260"
                  evaluateOn: ANTLR
                  debugFeature: ACTIVE
              Check if it is a number:
                description: Should return I am a number if the Structured Reference
                  is a number
                value:
                  formula: "IF(ISNUM([@[Sales Amount]]),\"I am a number\", \"I am\
                    \ not a number\")"
                  structuredReferences:
                    Sales Amount: "260"
                  evaluateOn: ANTLR
                  debugFeature: ACTIVE
        required: true
      responses:
        "200":
          description: OK
          content:
            application/vnd.formula-evaluated-v1+json:
              schema:
                $ref: "#/components/schemas/EvaluationResult"
              examples:
                evaluated formula:
                  description: evaluated formula
                  value:
                    result: "26"
                    exactProcessedInNanos: 28231378
                    formulaCacheRetrieval: IN
                    evaluationLoadingProcessedIn:
                      processedAtStart: 2024-05-05T01:09:39.695736969+02:00
                      processedAtEnd: 2024-05-05T01:09:39.717878532+02:00
                      processedInNanos: 22141563
                    evaluationProcessedIn:
                      processedAtStart: 2024-05-05T01:09:39.722660591+02:00
                      processedAtEnd: 2024-05-05T01:09:39.728750406+02:00
                      processedInNanos: 6089815
                    intermediateResults:
                    - evaluatedAtStart: 2024-05-05T01:09:39.724292501+02:00
                      evaluatedAtEnd: 2024-05-05T01:09:39.728590951+02:00
                      processedInNanos: 4298450
                      positionedAt:
                        start: 0
                        end: 48
                      inputs:
                      - name: left
                        value: "260"
                        positionedAt:
                          start: 4
                          end: 20
                      - name: right
                        value: "0.1"
                        positionedAt:
                          start: 22
                          end: 47
                      result: "26"
                    - evaluatedAtStart: 2024-05-05T01:09:39.724415205+02:00
                      evaluatedAtEnd: 2024-05-05T01:09:39.726876407+02:00
                      processedInNanos: 2461202
                      positionedAt:
                        start: 4
                        end: 20
                      inputs:
                      - name: structuredReference
                        value: Sales Amount
                        positionedAt:
                          start: 7
                          end: 18
                      result: "260"
                    - evaluatedAtStart: 2024-05-05T01:09:39.727326633+02:00
                      evaluatedAtEnd: 2024-05-05T01:09:39.728449028+02:00
                      processedInNanos: 1122395
                      positionedAt:
                        start: 22
                        end: 47
                      inputs:
                      - name: left
                        value: "10"
                        positionedAt:
                          start: 26
                          end: 42
                      - name: right
                        value: "100"
                        positionedAt:
                          start: 44
                          end: 46
                      result: "0.1"
                    - evaluatedAtStart: 2024-05-05T01:09:39.727336957+02:00
                      evaluatedAtEnd: 2024-05-05T01:09:39.727368776+02:00
                      processedInNanos: 31819
                      positionedAt:
                        start: 26
                        end: 42
                      inputs:
                      - name: structuredReference
                        value: '% Commission'
                        positionedAt:
                          start: 29
                          end: 40
                      result: "10"
                    - evaluatedAtStart: 2024-05-05T01:09:39.727476161+02:00
                      evaluatedAtEnd: 2024-05-05T01:09:39.72750957+02:00
                      processedInNanos: 33409
                      positionedAt:
                        start: 44
                        end: 46
                      inputs: []
                      result: "100"
        "400":
          description: Syntax exception while evaluating formula
          content:
            application/vnd.evaluation-syntax-error-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                Syntax in error:
                  description: Syntax in error
                  value:
                    message: Syntax error at line '0' at positionedAt '1' with message
                      'custom "msg"'
        "500":
          description: Unhandled exception while evaluating formula
          content:
            application/vnd.evaluation-unexpected-exception-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                Unexpected exception:
                  description: Unexpected exception
                  value:
                    message: unexpected "exception"
  /suggestCompletion:
    post:
      tags:
      - Suggest Completion Endpoint
      operationId: suggestCompletion
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - suggestedFormula
              type: object
              properties:
                suggestedFormula:
                  description: Suggest tokens
                  type: string
                  example: IF
        required: true
      responses:
        "200":
          description: OK
          content:
            application/vnd.suggest-completion-v1+json:
              schema:
                type: array
                items:
                  type: string
              examples:
                List of suggested tokens:
                  description: List of suggested tokens
                  value:
                  - (
        "500":
          description: AutoSuggestion service execution exception while processing
            formula
          content:
            application/vnd.autosuggestion-unavailable-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                Syntax in error:
                  description: Syntax in error
                  value:
                    message: "AutoSuggestion service execution unavailable while processing\
                      \ formula 'IF(EQ([@[Sales Person]],\"Joe\"),MUL(MUL([@[Sales\
                      \ Amount]],DIV([@[% Commission]],100)),2),MUL([@[Sales Amount]],DIV([@[%\
                      \ Commission]],100)' - msg 'error'"
            application/vnd.autosuggestion-execution-exception-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                Syntax in error:
                  description: Syntax in error
                  value:
                    message: "AutoSuggestion service execution exception while processing\
                      \ formula 'IF(EQ([@[Sales Person]],\"Joe\"),MUL(MUL([@[Sales\
                      \ Amount]],DIV([@[% Commission]],100)),2),MUL([@[Sales Amount]],DIV([@[%\
                      \ Commission]],100)' - msg 'error'"
            application/vnd.autosuggestion-unexpected-exception-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                Syntax in error:
                  description: Syntax in error
                  value:
                    message: unexpected "exception"
        "503":
          description: AutoSuggestion service has timed out while executing formula
          content:
            application/vnd.autosuggestion-execution-timed-out-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                Syntax in error:
                  description: Syntax in error
                  value:
                    message: "AutoSuggestion service has timed out while executing\
                      \ formula 'IF(EQ([@[Sales Person]],\"Joe\"),MUL(MUL([@[Sales\
                      \ Amount]],DIV([@[% Commission]],100)),2),MUL([@[Sales Amount]],DIV([@[%\
                      \ Commission]],100)' - Infinite loop in Grammar - msg 'error'"
  /validate:
    post:
      tags:
      - Validator Endpoint
      operationId: validate
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - formula
              type: object
              properties:
                formula:
                  description: Formula to validate
                  type: string
                  example: "MUL([@[Sales Amount]],DIV([@[% Commission]],100))"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/vnd.formula-validator-v1+json:
              schema:
                required:
                - valid
                - valid
                type: object
                properties:
                  valid:
                    type: boolean
                  line:
                    format: int32
                    type: integer
                  charPositionInLine:
                    format: int32
                    type: integer
                  msg:
                    type: string
              examples:
                Valid formula validated:
                  description: "MUL([@[Sales Amount]],DIV([@[% Commission]],100))"
                  value:
                    valid: true
                Invalid formula validated:
                  description: "MUL([@[Sales Amount]],DIV([@[% Commission]],100)"
                  value:
                    valid: false
                    line: 1
                    charPositionInLine: 48
                    msg: missing ')' at '<EOF>'
        "500":
          description: Validation service execution exception while processing formula
          content:
            application/vnd.validation-unexpected-exception-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                Syntax in error:
                  description: Syntax in error
                  value:
                    message: unexpected "exception"
components:
  schemas:
    DebugFeature:
      enum:
      - ACTIVE
      - INACTIVE
      type: string
    ErrorMessage:
      required:
      - message
      - message
      type: object
      properties:
        message:
          type: string
    Evaluate:
      required:
      - formula
      - structuredReferences
      - debugFeature
      - evaluateOn
      - formula
      - structuredReferences
      - debugFeature
      - evaluateOn
      type: object
      properties:
        formula:
          type: string
        structuredReferences:
          type: object
          additionalProperties:
            type: string
        debugFeature:
          $ref: "#/components/schemas/DebugFeature"
        evaluateOn:
          $ref: "#/components/schemas/EvaluateOn"
    EvaluateOn:
      enum:
      - ANTLR
      - ANTLR_MAPPING_DOMAIN_EVAL
      type: string
    EvaluationLoadingProcessedIn:
      required:
      - processedAtStart
      - processedAtEnd
      - processedInNanos
      - evaluatedAtStart
      - evaluatedAtEnd
      - processedInNanos
      type: object
      properties:
        evaluatedAtStart:
          type: string
          allOf:
          - $ref: "#/components/schemas/ZonedDateTime"
        evaluatedAtEnd:
          type: string
          allOf:
          - $ref: "#/components/schemas/ZonedDateTime"
        processedInNanos:
          format: int64
          type: integer
    EvaluationProcessedInDTO:
      required:
      - processedAtStart
      - processedAtEnd
      - processedInNanos
      - processedAtStart
      - processedAtEnd
      - processedInNanos
      type: object
      properties:
        processedAtStart:
          type: string
          allOf:
          - $ref: "#/components/schemas/ZonedDateTime"
        processedAtEnd:
          type: string
          allOf:
          - $ref: "#/components/schemas/ZonedDateTime"
        processedInNanos:
          format: int64
          type: integer
    EvaluationResult:
      required:
      - result
      - exactProcessedInNanos
      - formulaCacheRetrieval
      - parserEvaluationProcessedIn
      - evaluationProcessedIn
      - intermediateResults
      - result
      - exactProcessedInNanos
      - formulaCacheRetrieval
      - parserEvaluationProcessedIn
      - evaluationProcessedIn
      - intermediateResults
      type: object
      properties:
        result:
          type: string
        exactProcessedInNanos:
          format: int64
          type: integer
        formulaCacheRetrieval:
          $ref: "#/components/schemas/FormulaCacheRetrieval"
        parserEvaluationProcessedIn:
          $ref: "#/components/schemas/EvaluationLoadingProcessedIn"
        evaluationProcessedIn:
          $ref: "#/components/schemas/EvaluationProcessedInDTO"
        intermediateResults:
          type: array
          items:
            $ref: "#/components/schemas/IntermediateResult"
    FormulaCacheRetrieval:
      enum:
      - IN
      - MISSED
      type: string
    Input:
      required:
      - name
      - value
      - positionedAt
      - name
      - value
      - positionedAt
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        positionedAt:
          $ref: "#/components/schemas/PositionedAt"
    IntermediateResult:
      required:
      - evaluatedAtStart
      - evaluatedAtEnd
      - processedInNanos
      - positionedAt
      - inputs
      - value
      - evaluatedAtStart
      - evaluatedAtEnd
      - processedInNanos
      - positionedAt
      - inputs
      - result
      type: object
      properties:
        evaluatedAtStart:
          type: string
          allOf:
          - $ref: "#/components/schemas/ZonedDateTime"
        evaluatedAtEnd:
          type: string
          allOf:
          - $ref: "#/components/schemas/ZonedDateTime"
        processedInNanos:
          format: int64
          type: integer
        positionedAt:
          $ref: "#/components/schemas/PositionedAt"
        inputs:
          type: array
          items:
            $ref: "#/components/schemas/Input"
        result:
          type: string
    PositionedAt:
      required:
      - start
      - end
      - start
      - end
      type: object
      properties:
        start:
          format: int32
          type: integer
        end:
          format: int32
          type: integer
    Validation:
      required:
      - valid
      - valid
      type: object
      properties:
        valid:
          type: boolean
        line:
          format: int32
          type: integer
        charPositionInLine:
          format: int32
          type: integer
        msg:
          type: string
    ZonedDateTime:
      format: date-time
      type: string
      example: 2022-03-10T12:15:50-04:00
